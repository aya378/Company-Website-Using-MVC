// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CampanyContext))]
    partial class CampanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MGRssn")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("startdate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("MGRssn")
                        .IsUnique()
                        .HasFilter("[MGRssn] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WebApplication1.Models.Depentent", b =>
                {
                    b.Property<int>("essn")
                        .HasColumnType("int");

                    b.Property<string>("dependant_name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("bdate")
                        .HasColumnType("date");

                    b.Property<int>("employeeId")
                        .HasColumnType("int");

                    b.Property<string>("sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("essn", "dependant_name");

                    b.HasIndex("employeeId");

                    b.ToTable("Dependants");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("bdate")
                        .HasColumnType("date");

                    b.Property<int?>("dno")
                        .HasColumnType("int");

                    b.Property<string>("fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("salary")
                        .HasColumnType("money");

                    b.Property<int?>("superssn")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dno");

                    b.HasIndex("superssn");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApplication1.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dnum")
                        .HasColumnType("int");

                    b.Property<string>("plocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("dnum");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WebApplication1.Models.Work_for+works_for", b =>
                {
                    b.Property<int>("essn")
                        .HasColumnType("int");

                    b.Property<int>("pnum")
                        .HasColumnType("int");

                    b.Property<int>("houres")
                        .HasColumnType("int");

                    b.HasKey("essn", "pnum");

                    b.HasIndex("pnum");

                    b.ToTable("works_Fors");
                });

            modelBuilder.Entity("WebApplication1.Models.Department", b =>
                {
                    b.HasOne("WebApplication1.Models.Employee", "managr")
                        .WithOne("manageDepartment")
                        .HasForeignKey("WebApplication1.Models.Department", "MGRssn");

                    b.Navigation("managr");
                });

            modelBuilder.Entity("WebApplication1.Models.Depentent", b =>
                {
                    b.HasOne("WebApplication1.Models.Employee", "employee")
                        .WithMany("Dependants")
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.HasOne("WebApplication1.Models.Department", "department")
                        .WithMany("Employees")
                        .HasForeignKey("dno");

                    b.HasOne("WebApplication1.Models.Employee", "manager")
                        .WithMany("group")
                        .HasForeignKey("superssn");

                    b.Navigation("department");

                    b.Navigation("manager");
                });

            modelBuilder.Entity("WebApplication1.Models.Project", b =>
                {
                    b.HasOne("WebApplication1.Models.Department", "department")
                        .WithMany("Projects")
                        .HasForeignKey("dnum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("WebApplication1.Models.Work_for+works_for", b =>
                {
                    b.HasOne("WebApplication1.Models.Employee", "employee")
                        .WithMany("Works_Fors")
                        .HasForeignKey("essn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Project", "project")
                        .WithMany("Works_Fors")
                        .HasForeignKey("pnum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("WebApplication1.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Navigation("Dependants");

                    b.Navigation("Works_Fors");

                    b.Navigation("group");

                    b.Navigation("manageDepartment")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Project", b =>
                {
                    b.Navigation("Works_Fors");
                });
#pragma warning restore 612, 618
        }
    }
}
